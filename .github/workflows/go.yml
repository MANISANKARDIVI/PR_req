name: Go - CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/go.yml'
      - 'go-test/**'
  pull_request:
    branches:
      - dev
    paths:
      - '.github/workflows/go.yml'
      - 'go-test/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd go-test
          go mod download
          go mod tidy  # Ensure the go.mod and go.sum files are up-to-date

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build the application
        run: |
          cd go-test
          mkdir -p dist
          CGO_ENABLED=1 go build -v -o dist/main ./...

      - name: Debug build output
        run: |
          echo "Contents of dist:"
          ls -la go-test/dist

  docker_build_push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Read version from VERSION file
        id: read_version
        run: |
          if [ -f go-test/VERSION ]; then
            VERSION=$(cat go-test/VERSION | xargs)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION file not found!"
            exit 1
          fi
      - name: Build and push Docker image
        run: |
          cd go-test
          docker build -t manisankardivi/new:${{ env.VERSION }} .
          docker push manisankardivi/new:${{ env.VERSION }}

  k8s-manifest-files_update:
    runs-on: ubuntu-latest
    needs: docker_build_push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Kubernetes repo
        run: |
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/MANISANKARDIVI/k8s_repo.git
          cd k8s_repo
          sed -i "s|image: manisankardivi/new:.*|image: manisankardivi/new:${{ env.VERSION }}|" manifest.yaml
          echo "Updated manifest.yaml:"
          grep "image: manisankardivi/new:" manifest.yaml
      - name: Commit and push changes
        run: |
          cd k8s_repo
          git config --global user.email "manisankardivi@gmail.com"
          git config --global user.name "manisankardivi"
          git add .
          if git diff --cached --exit-code --quiet; then
            echo "No changes detected."
          else
            git commit -m "Updated manifest.yaml with version ${{ env.VERSION }}"
            git push origin main
          fi
    ####
